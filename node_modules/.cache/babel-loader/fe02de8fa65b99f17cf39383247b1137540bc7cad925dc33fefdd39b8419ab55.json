{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/personal/lescontess/src/layouts/basket/checkout/checkout-form/CheckoutForm.jsx\";\n// import React from \"react\";\n// import axios from \"axios\";\n// import { CardElement, Elements } from \"@stripe/react-stripe-js\";\n// import { loadStripe } from \"@stripe/stripe-js\";\n\n// const CheckoutForm = ({ elements, stripe }) => {\n//   const stripePromise = loadStripe(process.env.STRIPE_PUBLIC_KEY)\n//   const options = {}\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     const cardElement = elements.getElement(CardElement);\n\n//     try {\n//       const { token, error } = await stripe.createToken(cardElement);\n\n//       if (error) {\n//         console.error(error);\n//       } else {\n//         console.log(token);\n\n//         const response = await axios.post(\"http://localhost:8000/checkout\", {\n//           token: token.id,\n//           amount: 1000,\n//         });\n\n//         console.log(response.data);\n\n//         if (response.data.success) {\n//           alert(\"Payment successful!\");\n//         } else {\n//           alert(\"Payment failed: \" + response.data.error);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Error sending token to server:\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <Elements loadStripe={stripePromise} options={options}>\n//         <CardElement />\n//       </Elements>\n//       <button type=\"submit\" disabled={!stripe}>\n//         Pay\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default CheckoutForm;\n\nimport React from \"react\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport WrappedCheckoutForm from \"./WrappedCheckoutForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.STRIPE_PUBLIC_KEY);\nexport const CheckoutForm = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(WrappedCheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","Elements","loadStripe","WrappedCheckoutForm","jsxDEV","_jsxDEV","stripePromise","process","env","STRIPE_PUBLIC_KEY","CheckoutForm","stripe","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kali/Documents/personal/lescontess/src/layouts/basket/checkout/checkout-form/CheckoutForm.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import axios from \"axios\";\r\n// import { CardElement, Elements } from \"@stripe/react-stripe-js\";\r\n// import { loadStripe } from \"@stripe/stripe-js\";\r\n\r\n// const CheckoutForm = ({ elements, stripe }) => {\r\n//   const stripePromise = loadStripe(process.env.STRIPE_PUBLIC_KEY)\r\n//   const options = {}\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (!stripe || !elements) {\r\n//       return;\r\n//     }\r\n\r\n//     const cardElement = elements.getElement(CardElement);\r\n\r\n//     try {\r\n//       const { token, error } = await stripe.createToken(cardElement);\r\n\r\n//       if (error) {\r\n//         console.error(error);\r\n//       } else {\r\n//         console.log(token);\r\n\r\n//         const response = await axios.post(\"http://localhost:8000/checkout\", {\r\n//           token: token.id,\r\n//           amount: 1000,\r\n//         });\r\n\r\n//         console.log(response.data);\r\n\r\n//         if (response.data.success) {\r\n//           alert(\"Payment successful!\");\r\n//         } else {\r\n//           alert(\"Payment failed: \" + response.data.error);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error sending token to server:\", error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <Elements loadStripe={stripePromise} options={options}>\r\n//         <CardElement />\r\n//       </Elements>\r\n//       <button type=\"submit\" disabled={!stripe}>\r\n//         Pay\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default CheckoutForm;\r\n\r\n\r\nimport React from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport WrappedCheckoutForm from \"./WrappedCheckoutForm\";\r\n\r\nconst stripePromise = loadStripe(process.env.STRIPE_PUBLIC_KEY)\r\n\r\nexport const CheckoutForm = () => {\r\n  return(\r\n    <Elements stripe={stripePromise}>\r\n      <WrappedCheckoutForm/>\r\n    </Elements>\r\n  )\r\n}"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,aAAa,GAAGJ,UAAU,CAACK,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;AAE/D,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,oBACEL,OAAA,CAACJ,QAAQ;IAACU,MAAM,EAAEL,aAAc;IAAAM,QAAA,eAC9BP,OAAA,CAACF,mBAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEf,CAAC;AAAAC,EAAA,GANYP,YAAY;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}